{
  "source": {
    "hash": "0x5c0d0e69e2034072d196a37485dbfd4e27d5e509820c278d6099898771686f9c",
    "language": "ink! 3.4.0",
    "compiler": "rustc 1.67.0-nightly"
  },
  "contract": {
    "name": "factory_teasury_manager",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "treasury_manager_code_hash",
              "type": {
                "displayName": [
                  "Hash"
                ],
                "type": 12
              }
            }
          ],
          "docs": [],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [],
          "docs": [],
          "label": "get_treasury_manager_code_hash",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "Hash"
            ],
            "type": 12
          },
          "selector": "0xb6fb8813"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_version",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "u32"
            ],
            "type": 1
          },
          "selector": "0x0c1a1d77"
        },
        {
          "args": [],
          "docs": [],
          "label": "get_admin",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "AccountId"
            ],
            "type": 6
          },
          "selector": "0x57b8a8a7"
        },
        {
          "args": [
            {
              "label": "new_treasury_manager_code_hash",
              "type": {
                "displayName": [
                  "Hash"
                ],
                "type": 12
              }
            }
          ],
          "docs": [],
          "label": "set_treasury_manager_code_hash",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "Result"
            ],
            "type": 17
          },
          "selector": "0xb15a88d8"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RevokeRoleInput1"
                ],
                "type": 1
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RevokeRoleInput2"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Revokes `role` from `account`.",
            "",
            " On success a `RoleRevoked` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `MissingRole` error if caller can't grant the `role` or if `account` doesn't have `role`."
          ],
          "label": "AccessControl::revoke_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "accesscontrol_external",
              "RevokeRoleOutput"
            ],
            "type": 17
          },
          "selector": "0x6e4f0991"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "HasRoleInput1"
                ],
                "type": 1
              }
            },
            {
              "label": "address",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "HasRoleInput2"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Returns `true` if `account` has been granted `role`."
          ],
          "label": "AccessControl::has_role",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "accesscontrol_external",
              "HasRoleOutput"
            ],
            "type": 19
          },
          "selector": "0xc1d9ac18"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GetRoleAdminInput1"
                ],
                "type": 1
              }
            }
          ],
          "docs": [
            " Returns the admin role that controls `role`. See `grant_role` and `revoke_role`."
          ],
          "label": "AccessControl::get_role_admin",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "accesscontrol_external",
              "GetRoleAdminOutput"
            ],
            "type": 1
          },
          "selector": "0x83da3bb2"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GrantRoleInput1"
                ],
                "type": 1
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "GrantRoleInput2"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Grants `role` to `account`.",
            "",
            " On success a `RoleGranted` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `MissingRole` error if caller can't grant the role.",
            " Returns with `RoleRedundant` error `account` has `role`."
          ],
          "label": "AccessControl::grant_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "accesscontrol_external",
              "GrantRoleOutput"
            ],
            "type": 17
          },
          "selector": "0x4ac062fd"
        },
        {
          "args": [
            {
              "label": "role",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RenounceRoleInput1"
                ],
                "type": 1
              }
            },
            {
              "label": "account",
              "type": {
                "displayName": [
                  "accesscontrol_external",
                  "RenounceRoleInput2"
                ],
                "type": 6
              }
            }
          ],
          "docs": [
            " Revokes `role` from the calling account.",
            " Roles are often managed via `grant_role` and `revoke_role`: this function's",
            " purpose is to provide a mechanism for accounts to lose their privileges",
            " if they are compromised (such as when a trusted device is misplaced).",
            "",
            " On success a `RoleRevoked` event is emitted.",
            "",
            " # Errors",
            "",
            " Returns with `InvalidCaller` error if caller is not `account`.",
            " Returns with `MissingRole` error if `account` doesn't have `role`."
          ],
          "label": "AccessControl::renounce_role",
          "mutates": true,
          "payable": false,
          "returnType": {
            "displayName": [
              "accesscontrol_external",
              "RenounceRoleOutput"
            ],
            "type": 17
          },
          "selector": "0xeaf1248a"
        },
        {
          "args": [
            {
              "label": "contract_administrator",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput1"
                ],
                "type": 6
              }
            },
            {
              "label": "contract_manager",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput2"
                ],
                "type": 6
              }
            },
            {
              "label": "treasury_token_symbol",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput3"
                ],
                "type": 20
              }
            },
            {
              "label": "treasury_token_address",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput4"
                ],
                "type": 6
              }
            },
            {
              "label": "usdt_token_address",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput5"
                ],
                "type": 6
              }
            },
            {
              "label": "oracle_dex_address",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput6"
                ],
                "type": 6
              }
            },
            {
              "label": "liabilities_threshold_level",
              "type": {
                "displayName": [
                  "factory_external",
                  "LaunchTreasuryManagerInput7"
                ],
                "type": 8
              }
            }
          ],
          "docs": [],
          "label": "Factory::launch_treasury_manager",
          "mutates": true,
          "payable": true,
          "returnType": null,
          "selector": "0x49372114"
        },
        {
          "args": [],
          "docs": [],
          "label": "Factory::get_owners",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "factory_external",
              "GetOwnersOutput"
            ],
            "type": 16
          },
          "selector": "0xa9de2b84"
        },
        {
          "args": [
            {
              "label": "owner",
              "type": {
                "displayName": [
                  "factory_external",
                  "GetOwnerContractAddressInput1"
                ],
                "type": 6
              }
            }
          ],
          "docs": [],
          "label": "Factory::get_owner_contract_address",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "factory_external",
              "GetOwnerContractAddressOutput"
            ],
            "type": 6
          },
          "selector": "0xdc47e935"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "struct": {
                "fields": [
                  {
                    "layout": {
                      "cell": {
                        "key": "0x75b08c5a00000000000000000000000000000000000000000000000000000000",
                        "ty": 0
                      }
                    },
                    "name": "admin_roles"
                  },
                  {
                    "layout": {
                      "struct": {
                        "fields": [
                          {
                            "layout": {
                              "cell": {
                                "key": "0x2779f6fc00000000000000000000000000000000000000000000000000000000",
                                "ty": 4
                              }
                            },
                            "name": "members"
                          },
                          {
                            "layout": {
                              "enum": {
                                "dispatchKey": "0x2879f6fc00000000000000000000000000000000000000000000000000000000",
                                "variants": {
                                  "0": {
                                    "fields": [
                                      {
                                        "layout": {
                                          "cell": {
                                            "key": "0x2979f6fc00000000000000000000000000000000000000000000000000000000",
                                            "ty": 9
                                          }
                                        },
                                        "name": null
                                      }
                                    ]
                                  },
                                  "1": {
                                    "fields": []
                                  }
                                }
                              }
                            },
                            "name": "_reserved"
                          }
                        ]
                      }
                    },
                    "name": "members"
                  },
                  {
                    "layout": {
                      "enum": {
                        "dispatchKey": "0x76b08c5a00000000000000000000000000000000000000000000000000000000",
                        "variants": {
                          "0": {
                            "fields": [
                              {
                                "layout": {
                                  "cell": {
                                    "key": "0x77b08c5a00000000000000000000000000000000000000000000000000000000",
                                    "ty": 9
                                  }
                                },
                                "name": null
                              }
                            ]
                          },
                          "1": {
                            "fields": []
                          }
                        }
                      }
                    },
                    "name": "_reserved"
                  }
                ]
              }
            },
            "name": "access"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 6
              }
            },
            "name": "admin"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 1
              }
            },
            "name": "version"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0200000000000000000000000000000000000000000000000000000000000000",
                "ty": 12
              }
            },
            "name": "treasury_manager_code_hash"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0300000000000000000000000000000000000000000000000000000000000000",
                "ty": 13
              }
            },
            "name": "treasury_manager_owners_map"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0400000000000000000000000000000000000000000000000000000000000000",
                "ty": 16
              }
            },
            "name": "treasury_manager_owners_vec"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 1
            }
          ],
          "path": [
            "openbrush_lang",
            "storage",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "sequence": {
              "type": 3
            }
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "tuple": [
              1,
              1
            ]
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 10
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 5
            },
            {
              "name": "V",
              "type": 9
            }
          ],
          "path": [
            "openbrush_lang",
            "storage",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "tuple": [
              1,
              6
            ]
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 7,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 8
            }
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 9,
        "type": {
          "def": {
            "tuple": []
          }
        }
      },
      {
        "id": 10,
        "type": {
          "def": {
            "sequence": {
              "type": 11
            }
          }
        }
      },
      {
        "id": 11,
        "type": {
          "def": {
            "tuple": [
              5,
              9
            ]
          }
        }
      },
      {
        "id": 12,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 7,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "Hash"
          ]
        }
      },
      {
        "id": 13,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 14
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 6
            },
            {
              "name": "V",
              "type": 6
            }
          ],
          "path": [
            "openbrush_lang",
            "storage",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 14,
        "type": {
          "def": {
            "sequence": {
              "type": 15
            }
          }
        }
      },
      {
        "id": 15,
        "type": {
          "def": {
            "tuple": [
              6,
              6
            ]
          }
        }
      },
      {
        "id": 16,
        "type": {
          "def": {
            "sequence": {
              "type": 6
            }
          }
        }
      },
      {
        "id": 17,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "fields": [
                    {
                      "type": 9
                    }
                  ],
                  "index": 0,
                  "name": "Ok"
                },
                {
                  "fields": [
                    {
                      "type": 18
                    }
                  ],
                  "index": 1,
                  "name": "Err"
                }
              ]
            }
          },
          "params": [
            {
              "name": "T",
              "type": 9
            },
            {
              "name": "E",
              "type": 18
            }
          ],
          "path": [
            "Result"
          ]
        }
      },
      {
        "id": 18,
        "type": {
          "def": {
            "variant": {
              "variants": [
                {
                  "index": 0,
                  "name": "InvalidCaller"
                },
                {
                  "index": 1,
                  "name": "MissingRole"
                },
                {
                  "index": 2,
                  "name": "RoleRedundant"
                }
              ]
            }
          },
          "path": [
            "openbrush_contracts",
            "traits",
            "errors",
            "access_control",
            "AccessControlError"
          ]
        }
      },
      {
        "id": 19,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 20,
        "type": {
          "def": {
            "sequence": {
              "type": 8
            }
          }
        }
      }
    ]
  }
}